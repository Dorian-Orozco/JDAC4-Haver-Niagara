@model X.PagedList.IPagedList<Haver_Niagara.Models.NCR>
@using X.PagedList;
@using X.PagedList.Mvc.Core;



﻿@{
    ViewBag.Title = "NCR List";
}



<div class="d-flex justify-content-between">
    <h1 class="mt-4 mb-4"> Non-Conformance Log</h1>
    <p>
      <a asp-controller="NCRs" asp-action="Create" class="btn btn-primary">Create NCR Report</a>
    </p>
</div>


@using (Html.BeginForm("List", "NCR", FormMethod.Get))
{
    <p>
        Filter By NCR or Part #: @Html.TextBox("SearchString")
        Filter By Supplier:
        @Html.DropDownList("SelectedSupplier", (SelectList)ViewBag.SupplierList, "Select Supplier")
        Filter By Status:
        @Html.DropDownList("SelectedStatus", new List<SelectListItem>
            {
            new SelectListItem { Text = "Open", Value = "true" },
            new SelectListItem { Text = "Closed", Value = "false" },
            new SelectListItem { Text = "All", Value = "", Selected = true }
            })
        <label for="SelectedDate">Filter By Date:</label>
        <input type="date" id="SelectedDate" name="SelectedDate">
        <input type="submit" value="Search" />
        <a href="@Url.Action("ClearFilters", "Home")" class="btn btn-secondary">Clear Filters</a>
    </p>    
}

<table class="table">
    <thead>
        <tr>
            <th class="text-center">@Html.ActionLink("Status", "List", new { sortOrder = ViewBag.StageSortParam, currentFilter=ViewBag.CurrentFilter })</th>
            <th class="text-center">NCR Number</th>
            <th class="text-center">@Html.ActionLink("Date Created", "List", new { sortOrder = ViewBag.DateSortParam, currentFilter=ViewBag.CurrentFilter })</th>
            <th class="text-center">@Html.ActionLink("Part Number", "List", new { sortOrder = ViewBag.POSortParam, currentFilter=ViewBag.CurrentFilter })</th>
            <th>@Html.ActionLink("Supplier", "List", new { sortOrder = ViewBag.SupplierSortParam, currentFilter=ViewBag.CurrentFilter })</th>
             <th>Stage</th>
            <th class="text-center">Action</th>
            @* <th>Edit</th> *@
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {                           //Added some validation, will remove later.
            <tr>
                <td class="text-center">
                    @if (!item.NCR_Status)
                    {
                        <button class="status-btn closed" title="Closed"></button>
                    }
                    else
                    {
                        <button class="status-btn active" title="Active"></button>
                    }
                </td>
                @* Gets Date Time Now/Year, sets it as the first part of the string, and the second part is NCR Number, giving the "2024-000" format *@
                @{
                    int year = DateTime.Now.Year;
                }
                <td class="text-center">@year-@item.NCR_Number.PadLeft(3, '0')</td>
                <td class="text-center">@item.NCR_Date.ToString("MMM dd, yyyy")</td>
                <td class ="text-center">@(item.Part?.ProductNumber.ToString() ?? "Product Number Not Found")</td>
                <td >@(item.Part?.Supplier.Name.ToString() ?? "Supplier Name Not Found")</td>
                <td><p class="stage">@Html.DisplayFor(modelItem => item.NCR_Stage)</p></td>
                <td class="text-center">
                    <div>
                    <a href="@Url.Action("Details", "NCRs", new { id = item.ID })" class="view-btn me-1" title="View NCR report">
                        <ion-icon name="eye"></ion-icon>
                    </a>
                        <a href="@Url.Action("Edit", "NCRs", new { id = item.ID })" class="view-btn" title="Edit NCR report">
                            <ion-icon name="create"></ion-icon>
                        </a>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("List",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))