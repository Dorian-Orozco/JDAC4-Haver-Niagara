@model IEnumerable<Haver_Niagara.Models.NCR>

@{
    ViewData["Title"] = "Home Page";
}

@* layout with no container *@
@* @{
	Layout = "~/Views/Shared/_LayoutDashboard.cshtml";
} *@


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<style>
    h1 {
        font-size: 38px;
        font-weight: 600;
        color: #1C335E;
    }

    h2 {
        font-size: 18px;
        font-weight: 600;
    }

    h3 {
        font-size: 100px;
        font-weight: 600;
    }

    a, a:hover {
        color: inherit;
    }

    .activeCard {
        border-color: #0073e6;
        /* color: #0073e6; */
        color: rgb(0, 115, 230);
        transition: 0.1s ease-in-out all;
    }

        .activeCard:hover {
            color: rgb(0, 91, 184);
            border-color: rgb(0, 91, 184);
        }

    .body {
        color: #0C2340;
        font-family: Montserrat, sans-serif;
    }

    .button-container {
        display: flex;
        justify-content: flex-end;
        margin-top: 1rem;
    }

    .button {
        background-color: #0d6efd;
        border: none;
        border-radius: 5px;
        color: white;
        font-weight: 700;
        height: 45px;
        margin-left: 1rem;
        padding: 10px;
        text-align: center;
        width: 138px;
    }

    .card-row {
        padding: 0 20px;
    }

    .card {
        /* background-color: #E7E7E7; */
        border-radius: 10px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        flex-basis: 32%;
        padding: 1rem;
    }

    .card-content {
        align-items: center;
        display: flex;
        flex-direction: column;
        height: 100%;
        justify-content: center;
    }

    .closedCard {
        border-color: #b51963;
        color: #b51963;
        transition: 0.1s ease-in-out all;
    }

        .closedCard:hover {
            border-color: #90134f;
            color: #90134f;
        }

    .dashboard-bg {
        background-color: #E7E7E7;
    }

    .dashboard-container {
        background-color: #E7E7E7;
        border-radius: 20px;
        margin: 0 auto;
        max-width: 1000px;
        padding: 2rem;
        width: 100%;
    }

    .dashboard-row {
        align-items: center;
        display: flex;
        justify-content: space-between;
        margin-bottom: 1rem;
    }

    .disclaimer-txt {
        font-size: 12px;
        text-align: right;
        margin-left: 23rem;
    }

    .filter-container {
        display: flex;
        flex-basis: 28%;
        flex-direction: column;
        margin-right: 1rem;
    }

    .page-title {
        flex-basis: 50%;
        text-align: left;
    }

    .search-button {
        align-self: flex-end;
        background-color: #0d6efd;
        border: none;
        border-radius: 5px;
        color: white;
        flex-basis: 20%;
        font-weight: 700;
        height: 45px;
        width: 138px;
    }

    .stageCard {
        border-color: rgb(0, 191, 178);
        color: rgb(0, 191, 178);
        transition: 0.1s ease-in-out all;
    }

        .stageCard:hover {
            border-color: rgb(0, 143, 134); /* Darker shade */
            color: rgb(0, 143, 134); /* Darker shade */
        }

    table {
        border-collapse: collapse;
        width: 100%;
    }

    th, td {
        border: 1px solid #dddddd;
        font-size: 12px;
        padding: 12px;
        text-align: left;
    }

    th {
        background-color: #0d6efd;
        color: white;
    }

    tr:nth-child(even) {
        background-color: #f2f2f2
    }

    .wide-card {
        align-items: flex-start;
        background-color: white;
        border-radius: 5px;
        box-shadow: 0 2px 5px rgba(0,p,0,0.1);
        display: flex;
        flex-basis: 100%;
        flex-direction: column;
        padding: 1rem;
    }
</style>

<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">

<div>
    <div class="d-flex justify-content-between">
        <div class="d-flex mt-4 mb-4">
            <h1 class="">NCR Dashboard</h1>
            <div class="">
                <select name="stage" id="stage" class="form-select mt-2 ms-3">
                    <option value="Engineering" selected>Engineering</option>
                    <option value="Operations">Operations</option>
                    <option value="Procurement">Procurement</option>
                    <option value="Quality">Quality Rep</option>
                </select>
            </div>
        </div>
       @if (User.IsInRole("Admin") || (User.IsInRole("Quality Representative")))
            {
        <div>
            <a asp-controller="NCRs" asp-action="Create" class="btn btn-primary p-2">
                <ion-icon name="add-circle-outline" class="create-btn-icon"></ion-icon>
                <span class="me-1">Create Report</span>
            </a>
        </div>
 }
        else
        {
            <div>
                <a asp-controller="Home" asp-action="List" class="btn btn-primary p-2">
                   @*  <ion-icon name="add-circle-outline" class="vie-btn-icon"></ion-icon> *@
                    <span class="me-1">View NCRs</span>
                </a>
            </div>
        }
    </div>

    <div class="dashboard-row card-row">

        <div class="card activeCard">
            <a asp-controller="Home" asp-action="List">
                <div class="card-content">
                    <h2>Current Active</h2>
                    <h3 id="openNCRCount"></h3>
                    <p>This year</p>
                </div>
            </a>
        </div>

        <div class="card stageCard">
            <a id="dynamicStageLink" asp-controller="Home" asp-action="List"
               asp-route-SelectedStatus=""
               asp-route-ncrStage=""
               asp-route-SelectedDate=""
               asp-route-SelectedSupplier=""
               asp-route-SearchString=""
               asp-route-actionButton="Filter">
                <div class="card-content">
                    <h2><span id="stageName"></span> Stage</h2>
                    <h3 id="stageCount"></h3>
                    <p>Currently</p>
                </div>
            </a>
        </div>

        <div class="card closedCard">
            <a asp-controller="Home" asp-action="List"
               asp-route-SelectedStatus="false"
               asp-route-ncrStage=""
               asp-route-SelectedDate=""
               asp-route-SelectedSupplier=""
               asp-route-SearchString=""
               asp-route-actionButton="Filter">
                <div class="card-content">
                    <h2>Current Closed</h2>
                    <h3 id="closedNCRCount"></h3>
                    <p>This year</p>
                </div>
            </a>
        </div>

    </div>

    <div class="dashboard-row">
        <div class="wide-card">
            <h2>Active NCR Reports (Most Urgent)</h2>

            <table>
                <thead>
                    <tr>
                        <th>Status</th>
                        <th>NCR Number</th>
                        <th>Date Created</th>
                        <th>Part Number</th>
                        <th>Supplier</th>
                        <th>Stage</th>
                        <th>Actions</th>
                    </tr>
                </thead>

                @* Table Contents *@
                <tbody>
                    @foreach (var item in Model)
                    {                           //Added some validation, will remove later.
                        <tr>
                            <td class="text-center">
                                @if (!item.NCR_Status)
                                {
                                    <button class="status-btn closed" title="Closed"></button>
                                }
                                else
                                {
                                    <button class="status-btn active" title="Active"></button>
                                }
                            </td>
                            @{
                                int year = DateTime.Now.Year;
                            }
                            <td class="text-center">@item.FormattedID</td>
                            <td class="text-center">@item.NCR_Date.ToString("MMM dd, yyyy")</td>
                            <td class="text-center">@(item.Part != null ? item.Part.ProductNumber.ToString() : "Product number not found.")</td>
                            <td>@(item.Part != null && item.Supplier != null ? item.Supplier.Name : "Supplier name not found.")</td>
                            <td><p class="stage border" id="stage">@Html.DisplayFor(modelItem => item.NCR_Stage)</p></td>
                            <td class="text-center">
                                <div>
                                    <a href="@Url.Action("Details", "NCRs", new { id = item.ID })" class="view-btn me-1" title="View NCR report">
                                        <ion-icon name="eye"></ion-icon>
                                    </a>
                                    <a href="@Url.Action("Edit", "NCRs", new { id = item.ID })" class="view-btn" title="Edit NCR report">
                                        <ion-icon name="create"></ion-icon>
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <div class="d-flex">
                @* <a asp-controller="Home" asp-action="List" class="button">View All</a> *@
                @* <a asp-controller="NCRs" asp-action="Create" class="button">Create New</a> *@
                @* <p class="disclaimer-txt">(Displaying the oldest 5 open NCRs)</p> *@
            </div>
        </div>
    </div>

</div> @* container div *@


@section scripts {
    <script>
        $(document).ready(function () {
            fetch('/Home/GetOpenNCRCount')
                .then(response => response.json())
                .then(data => {
                    $('#openNCRCount').text(data.count);
                });

            fetch('/Home/GetClosedNCRCount')
                .then(response => response.json())
                .then(data => {
                    $('#closedNCRCount').text(data.count);
                });

            // Function to fetch stage-specific counts
            function fetchStageCount() {
                const stageSelect = $('#stage'); // id for drop down select list
                const stageSelectValue = stageSelect.val(); // Get the selected stage value

                const stageSelectText = stageSelect.find("option:selected").text(); // Get the selected stage text
                //const selectedStage = (stageSelectValue).text();

                // Update the stageName span with the selected stage's text
                $('#stageName').text(stageSelectText);

                // Declare newHref outside the if-else scope
                let newHref;
                if (stageSelectText == "Quality Rep") {
                    newHref = `/Home/List?SelectedStatus=true&ncrStage=QualityRepresentative_Final&SelectedDate=&SelectedSupplier=&SearchString=&actionButton=Filter`;
                } else {
                    newHref = `/Home/List?SelectedStatus=true&ncrStage=${stageSelectText}&SelectedDate=&SelectedSupplier=&SearchString=&actionButton=Filter`;
                }

                // Update only the targeted link's `href` attribute
                $('#dynamicStageLink').attr('href', newHref);

                fetch(`/Home/Get${stageSelectValue}StageCount`) // Use template literal to insert the value
                    .then(response => response.json())
                    .then(data => {
                        $('#stageCount').text(data.count);
                    })
                    .catch(error => console.error('Error fetching data:', error));
            }

            // Fetch the initial stage count when the page loads
            fetchStageCount();

            // Add an event listener for changes to the stage selection
            $('#stage').change(fetchStageCount);
        });
    </script>

    <script>
        $(document).ready(function () {
            // Select all elements with the class "stage"
            $('.stage').each(function () {
                // Get the text content of the element
                var stage = $(this).text().trim();

                // Remove existing classes
                $(this).removeClass('stage-eng2 stage-pur3 stage-qual4 stage-complete');

                // Depending on the stage, change the color
                switch (stage) {
                    case "Engineering":
                        $(this).addClass('stage-eng2');
                        // $(this).css('color', 'red');
                        break;
                    case "Operations":
                        $(this).addClass('stage-oper3');
                        // $(this).css('color', 'blue');
                        break;
                    case "Procurement":
                        $(this).addClass('stage-procure4');
                        // $(this).css('color', 'green');
                        break;
                    case "Quality Rep":
                        $(this).addClass('stage-qual5');
                        // $(this).css('color', 'green');
                        break;
                    // Add more cases as needed for other stages
                    case "Complete":
                        $(this).addClass('stage-complete');
                        break;
                    default:
                        // Default class if stage not matched
                        $(this).addClass('stage');
                    // Default color if stage not matched
                    // $(this).css('color', 'black');
                }
            });
        });
    </script>
}
