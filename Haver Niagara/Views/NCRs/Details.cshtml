

@model Haver_Niagara.Models.NCR

@{
    ViewData["Title"] = "Report";
}

@* h1 *@
<div class="pt-2 pb-0 ps-1 fs-5">
    <dl class="d-flex justify-content-start">
        <dt>
            @Html.DisplayNameFor(model => model.NCR_Number)
        </dt>
        <dd class="ms-2">
            @Html.DisplayFor(model => model.NCR_Number)
        </dd>
    </dl>
</div>

<form class="border p-4">
    <div>
        @* Quality Inspector Section *@
        <div class="row border m-1 p-2 ps-3 fs-6 section-header">1/ Quality Representative</div>
        @* row 1 *@
        <div class="row m-1">
            <div class="col-sm-4 border pt-3 ps-3">
                <dl>
                    <dt>
                        Identify Process Applicable:
                    </dt>
                    <dd class="mt-1 ms-2">
                        @foreach (QualityIdentify identify in Enum.GetValues(typeof(QualityIdentify)))
                        {
                            <span class="ms-5 me-5">
                                <input type="radio" id="@identify" name="qualityIdentify" value="@identify" disabled
                                @(Model.QualityInspection != null && Model.QualityInspection.QualityIdentify == identify ? "checked" : "") />
                                <label for="@identify">@identify</label><br />
                            </span>
                        }
                    </dd>
                </dl>
            </div>
            <div class="col-sm-4 border pt-3 ps-3">
                <dl>
                    <dt class="">
                        Supplier Name
                    </dt>
                    <dd class="mt-1">
                        @* If there is values, then display it, else display error *@
                        @if (Model.Part != null && Model.Part.Supplier != null)
                        {
                            @Model.Part.Supplier.Name;
                        }
                        else
                        {
                            <span>Supplier Not Assigned</span>
                        }
                    </dd>
                </dl>
            </div>
            <div class="col-sm-4 border pt-3 ps-3">
                <div class="row">
                    <dl class="d-flex m-0">
                        <dt class="col-sm-5 ">
                            @Html.DisplayNameFor(model => model.NCR_Number)
                        </dt>
                        <dd class="col-sm-7 ms-2">
                            @Html.DisplayFor(model => model.NCR_Number)
                        </dd>
                    </dl>
                </div>
                <div class="row">
                    <dl class="d-flex m-0">
                        <dt class="col-sm-5 ">
                            PO or Prod No.
                        </dt>
                        <dd class="col-sm-7 ms-2">
                            @Html.DisplayFor(model => model.Part.ProductNumber)  
                        </dd>
                    </dl>
                </div>
                <div class="row">
                    <dl class="d-flex mb-1">
                        <dt class="col-sm-5 ">
                            @Html.DisplayNameFor(model => model.Part.SalesOrder)

                        </dt>
                        <dd class="col-sm-7 ms-2">
                            @Html.DisplayFor(model => model.Part.SalesOrder)

                        </dd>
                    </dl>
                </div>
            </div>
        </div>
        @* row 2 *@
        <div class="row m-1">
            <div class="col-sm-8 border pt-3 ps-3">
                <dl>
                    <dt>
                        Description of Item <span class="fw-light">(including SAP No.)</span>
                    </dt>
                    <dd class="mt-1">
                        <div class="d-flex">
                            @Html.DisplayFor(model => model.Part.Name) #@Html.DisplayFor(model => model.Part.SAPNumber)
                        </div>
                    </dd>
                </dl>
            </div>
            <div class="col-sm-4 border pt-3 ps-3">
                <div class="row">
                    <dl class="d-flex m-0">
                        <dt class="col-sm">
                            @Html.DisplayNameFor(model => model.Part.QuantityRecieved)
                        </dt>
                        <dd class="col-sm ms-2">
                            @Html.DisplayFor(model => model.Part.QuantityRecieved)
                        </dd>
                    </dl>
                </div>
                <div class="row">
                    <dl class="d-flex">
                        <dt class="col-sm">
                            @Html.DisplayNameFor(model => model.Part.QuantityDefect)
                        </dt>
                        <dd class="col-sm ms-2">
                            @Html.DisplayFor(model => model.Part.QuantityDefect)
                        </dd>
                    </dl>
                </div>
            </div>
        </div>
        @* row 3 *@
        <div class="row m-1">
            <div class="col-sm-12 border pt-3 ps-3">
                <dl>
                    <dt>
                        Description of Defect <span class="fw-light">(in as much detail as possible)</span>
                        @* @Html.DisplayNameFor(model => model.Product.DefectLists) *@
                    </dt>
                    <dd class="mt-1">
                        <div class="d-flex">
                            @* @Html.DisplayFor(model => model.Product.DefectLists) *@
                            @if (Model.Part != null && Model.Part.DefectLists != null)
                            {
                                @foreach (var defectL in Model.Part.DefectLists)
                                {
                                    @defectL.Defect.Description;
                                }
                            }
                        </div>
                    </dd>
                </dl>
            </div>
        </div>
        @* row 4 *@
        <div class="row m-1 border">
            <div class="col-sm-3 pt-3 ps-3 d-flex justify-content-start">
                <dl>
                    <dt>
                        Item marked Non-conforming
                    </dt>
                    <dd class="mt-2">
                        <div class="d-flex">
                            @Html.RadioButtonFor(model => model.QualityInspection.ItemMarked, true, new { @checked = Model.QualityInspection != null && Model.QualityInspection.ItemMarked, @disabled = "disabled", @class = "me-2" })
                            <label class="me-4">Yes</label>

                            @Html.RadioButtonFor(model => model.QualityInspection.ItemMarked, false, new { @checked = Model.QualityInspection != null && !Model.QualityInspection.ItemMarked, @disabled = "disabled", @class = "me-2" })
                            <label>No</label>
                        </div>
                    </dd>
                </dl>
            </div>
            <div class="col-sm-3 pt-2">
                <small class="fw-light">
                    Completed NCR to be forwarded to HBC Purchasing Manager complete with any relevant documents attached
                </small>
            </div>
            <div class="col-sm-6 border pt-3 ps-3">
                <div class="row">
                    <dl class="d-flex m-0">
                        <dt class="col-sm">
                            Quality Representative's Name
                            @* @Html.DisplayNameFor(model => model.QualSignature) *@
                        </dt>
                        <dd class="col-sm ms-2">
                            @Html.DisplayFor(model => model.QualityInspection.Name) @* Where do we get quality reps name without going through new ncr? *@
                        </dd>
                    </dl>
                </div>
                <div class="row">
                    <dl class="d-flex">
                        <dt class="col-sm">
                            Date
                            @* @Html.DisplayNameFor(model => model.QualDate) *@
                        </dt>
                        <dd class="col-sm ms-2">
                            @Html.DisplayFor(model => model.NCR_Date)           @* FIX THIS PART TOO *@
                        </dd>
                    </dl>
                </div>
            </div>
        </div>
        @* row 5 *@
        <div class="row m-1 border">
            <dl>
                <dt class="col-sm pt-3 ps-3">
                    @* Hard-coded value *@
                    Images
                </dt>
                <dd class="col-sm pt-3 ps-3">
                    @if (Model.Part != null && Model.Part.Medias != null && Model.Part.Medias.Any())
                    {
                        foreach (var image in Model.Part.Medias)
                        {
                            if(image.Content != null)
                            {
                                <img src="data:@image.MimeType;base64,@Convert.ToBase64String(image.Content)" alt="@image.Description" width="300" height="300" />
                       
                            }
                            else
                            {
                                //Content Failed error ? 
                            }
                        }
                    }
                    else
                    {
                        <text>No Images Associated</text>
                    }
                </dd>
            </dl>
        </div>
        @* row 6 *@
        <div class="row m-1">
            <div class="col-sm-12 border pt-3 ps-3">
                <dl>
                    <dt class="ps-3">
                        Links
                    </dt>
                    @if (Model.Part == null)
                    {
                        <dd class="mt-1 ps-3">
                            No Part Associated
                        </dd>
                    }
                    else if (Model.Part.Medias != null && Model.Part.Medias.Any())
                    {
                        @foreach (var media in Model.Part.Medias)
                        {
                            if(!string.IsNullOrEmpty(media.Links))
                            {
                                <dd class="mt-1 ps-3">
                                    <a href="@media.Links">@media.Links</a>
                                </dd>
                            }
                        }
                    }
                    else
                    {
                        <dd class="mt-1 ps-3">
                            No Links Associated
                        </dd>
                    }
                </dl>
            </div>
        </div>


        @* Engineering Section *@
        <div class="row border m-1 p-2 ps-3 fs-6 section-header">2/ Engineering</div>

        @* row 7 *@
        <div class="row m-1 border">
            <div class="col-sm-12 pt-3 ps-3 d-flex justify-content-start">
                <dl>
                    <dt>
                        Review by HBC Engineering <span class="fw-light">(indicate disposition by checking one of the following)</span>
                    </dt>
                    <dd class="mt-2">
                        <div class="d-flex">         
                @*          Loops through and gets each enumeration value, then for each display the value and create
                            radio / label for. Then model check to see if it matches the decision in iteration
                            and if it does, then use checked property, else nothing *@
                            @foreach(EngineeringDisposition disposition in Enum.GetValues(typeof(EngineeringDisposition)))
                            {
                                <span class="ms-5 me-5">
                                    <input type="radio" id="@disposition" name="disposition" disabled value="@disposition"
                                    @(Model.Engineering?.EngineeringDisposition == disposition ? "checked" : "") /> 
                                    <label for="@disposition">@disposition</label><br />

                                </span>
                            }
                        </div>
                    </dd>
                </dl>
            </div>
        </div>
        @* row 8 *@
        <div class="row m-1 border">
            <div class="col-sm-12 pt-3 ps-3 d-flex justify-content-start">
                <dl>
                    <dt>   
                        Does Customer require notification of NCR? <span class="fw-light">(If "Yes" then raise message to customer detailing issues)</span>
                        @* @Html.DisplayNameFor(model => model.Product.Description) *@
                    </dt>
                    <dd class="mt-2">
                        <div class="d-flex">
                            @Html.RadioButtonFor(model => model.Engineering.CustomerNotify, true, new { @checked = Model.Engineering != null && Model.Engineering.CustomerNotify, @disabled = "disabled", @class = "me-2" })
                            <label class="me-4">Yes</label>

                            @Html.RadioButtonFor(model => model.Engineering.CustomerNotify, false, new { @checked = Model.Engineering != null && !Model.Engineering.CustomerNotify, @disabled = "disabled", @class = "me-2" })
                            <label>No</label>
                        </div>
                    </dd>
                </dl>
            </div>
        </div>
        @* row 9 *@
        <div class="row m-1">
            <div class="col-sm-12 border pt-3 ps-3">
                <dl>
                    <dt>
                        Disposition <span class="fw-light">(Sequence of work steps required when "repair" or "rework" indicated)</span>
                    </dt>
                    <dd class="mt-1">
                        <div class="d-flex">
                            @Html.DisplayFor(model=>model.Engineering.DispositionNotes)
                        </div>
                    </dd>
                </dl>
            </div>
        </div>
        @* row 10 *@
        <div class="row m-1 border">
            <div class="col-sm-6 pt-3 ps-3">
                <div class="d-flex justify-content-start">
                    <dl>
                        <dt>
                            Does the drawing require updating?
                            @* @Html.DisplayNameFor(model => model.Product.Description) *@
                        </dt>
                        <dd class="mt-2">
                            <div class="d-flex">
                                @Html.RadioButtonFor(model => model.Engineering.DrawUpdate, true, new { @checked = Model.Engineering != null && Model.Engineering.DrawUpdate, @disabled = "disabled", @class = "me-2" })
                                <label class="me-4">Yes</label>

                                @Html.RadioButtonFor(model => model.Engineering.DrawUpdate, false, new { @checked = Model.Engineering != null && !Model.Engineering.DrawUpdate, @disabled = "disabled", @class = "me-2" })
                                <label>No</label>
                            </div>
                        </dd>
                    </dl>
                </div>
                <div class="row ms-1 mb-0 d-flex">
                    <span class="col-sm">
                        <dl>
                            <dt class="fw-normal">
                                Original Rev. Number:
                                @* @Html.DisplayNameFor(model => model.Engineering.RevisionOriginal) *@
                            </dt>

                        </dl>
                    </span>
                    <span class="col-sm">
                        <dl>
                            <dd>
                                @Html.DisplayFor(model => model.Engineering.RevisionOriginal)
                            </dd>
                        </dl>
                    </span>
                </div>
                <div class="row ms-1 mb-0">
                    <span class="col-sm">
                        <dl>
                            <dt class="fw-normal">
                                Updated Rev. Number:
                                @* @Html.DisplayNameFor(model => model.Engineering.RevisionUpdated) *@
                            </dt>

                        </dl>
                    </span>
                    <span class="col-sm">
                        <dl>
                            <dd>
                                @Html.DisplayFor(model => model.Engineering.RevisionUpdated)
                            </dd>
                        </dl>
                    </span>
                </div>
                <div class="row ms-1 mb-0">
                    <div class="col-sm">
                        <dl>
                            <dt class="fw-normal">
                                Revision Date:
                            </dt>
                        </dl>
                    </div>
                    <div class="col-sm">
                       <dl>
                            @if (Model.Engineering != null)
                            {
                                var EngineeringRevisionDate = Model.Engineering.RevisionDate;
                                
                                <dd>
                                    @EngineeringRevisionDate.ToString("yyyy-MM-dd")
                                </dd>
                            }
                            else
                            {
                                <dd>
                                    No Engineering Associated
                                </dd>
                            }
                        </dl>
                    </div>
                </div>
            </div>
            <div class="col-sm-6 border pt-3 ps-3">
                <div class="row">
                    <dl class="d-flex m-0">
                        <dt class="col-sm">
                            Engineering's Name
                            @* @Html.DisplayNameFor(model => model.Engineering.EngSignature) *@
                        </dt>
                        <dd class="col-sm ms-2">
                            @Html.DisplayFor(model => Model.Engineering.Name)
                        </dd>
                    </dl>
                </div>
                <div class="row">
                    <dl class="d-flex">
                        <dt class="col-sm">
                            Date
                            @* @Html.DisplayNameFor(model => model.Engineering.EngSignatureDate) *@
                        </dt>
                        <dd class="col-sm ms-2">
                            @{
                                var engineeringSignatureDate = Model.Engineering != null ? Model.Engineering.Date.ToString("yyyy-MM-dd") : "Date Not Specified";
                            }
                            @engineeringSignatureDate
                        </dd>
                    </dl>
                </div>
            </div>
        </div>

        @* Purchasing Section *@
        <div class="row border m-1 p-2 ps-3 fs-6 section-header">3/ Purchasing</div>

        @* row 11 *@
        <div class="row m-1 border">
            <div class="col-sm-6 pt-3 ps-3 d-flex justify-content-start">
                <dl>
                    <dt>
                        Purchasing's Preliminary Decision
                        @* @Html.DisplayNameFor(model => model.Purchasing.PurchasingDec) *@
                    </dt>
                    <dd class="mt-1 ms-2">
                        @if (Model != null && Model.Operation != null)
                        {
                        <dd class="mt-1 ms-2">
                                @foreach (OperationDecision identify in Enum.GetValues(typeof(OperationDecision)))
                                {
                                <span class="ms-5 me-5">
                                    <input type="radio" id="@identify" name="qualityIdentify" value="@identify" disabled
                                        @(Model.QualityInspection != null && Model.Operation.OperationDecision == identify ? "checked" : "") />
                                    <label for="@identify">@identify</label><br />
                                </span>
                                }
                        </dd>
                        }
                    </dd>
                </dl>
            </div>
            <div class="col-sm-6 border pt-3 ps-3">
                <div class="row">
                    <dl class="m-0">
                        <dt class="col-sm">
                            Notes
                        </dt>
                    </dl>
                </div>
                <div class="row">
                    <dl>
                        <dd class="col-sm">
                            Replacement required
                        </dd>
                    </dl>
                </div>
            </div>
        </div>

        @* row 12 *@
        <div class="row m-1 border">
            <div class="col-sm-3 pt-3 ">
                <div class="d-flex justify-content-center">
                    <dl>
                        <dt>
                            Was a CAR raised? <span class="fw-light">(If "Yes" indicate CAR #)</span>
                            @* @Html.DisplayNameFor(model => model.Purchasing.CAR) *@
                        </dt>
                        <dd class="mt-2">
                            <div class="d-flex">
                                @Html.RadioButtonFor(model => model.Operation.OperationCar, true, new { @checked = Model.Operation != null && Model.Operation.OperationCar, @disabled = "disabled", @class = "me-2" })
                                <label class="me-4">Yes</label>

                                @Html.RadioButtonFor(model => model.Operation.OperationCar, false, new { @checked = Model.Operation != null && !Model.Operation.OperationCar, @disabled = "disabled", @class = "me-2" })
                                <label>No</label>
                            </div>
                        </dd>
                    </dl>
                </div>
                <div class="row ms-1 mb-0">
                    <p>
                        CAR Number:
                    </p>
                </div>
            </div>
            <div class="col-sm-3 pt-3 border ">
                <div class="d-flex justify-content-center">
                    <dl>
                        <dt>
                            Follow-up Required? <span class="fw-light">(If "Yes" indicate type & expected date)</span>
                            @* @Html.DisplayNameFor(model => model.Purchasing.followUp) *@
                        </dt>
                        <dd class="mt-2 mb-0">
                            <div class="d-flex">
                                <span class="ms-2 me-5">
                                    <input type="radio" id="marked" name="item_marked"  disabled value="yes">
                                    <label for="marked">Yes</label><br>
                                    @* @Html.DisplayFor(model => model.Purchasing.followUp) *@
                                </span>
                                <span>
                                    <input type="radio" id="notMarked" name="item_marked" disabled value="no">
                                    <label for="notMarked">No</label><br>
                                </span>
                            </div>
                        </dd>
                    </dl>
                </div>
                <div class="row ms-1 mb-2">
                    Type:
                </div>
                <div class="row ms-1 mb-2">
                    Expected Date:
                </div>
            </div>
            <div class="col-sm-6 border pt-3 ps-3">
                <div class="row">
                    <dl class="d-flex m-0">
                        <dt class="col-sm">
                            Operations Manager
                            @* @Html.DisplayNameFor(model => model.Purchasing.PurchaseSignature) *@
                        </dt>
                        <dd class="col-sm ms-2">
                            @Html.DisplayFor(model => model.Operation.Name)
                        </dd>
                    </dl>
                </div>
                <div class="row">
                    <dl class="d-flex">
                        <dt class="col-sm">
                            Date
                            @* @Html.DisplayNameFor(model => model.Purchasing.SignatureDate) *@
                        </dt>
                        <dd class="col-sm ms-2">
                            @{
                                var OperationDate = Model.Operation != null ? Model.Operation.OperationDate.ToString("yyyy-MM-dd") : "Date Not Specified";
                            }
                            @OperationDate
                        </dd>
                    </dl>
                </div>
            </div>
        </div>

        @* Quality Inspector Section *@
        <div class="row border m-1 p-2 ps-3 fs-6 section-header">4/ Quality Representative</div>
        @* row 13 *@
        <div class="row m-1 border">
            <div class="col-sm-3 pt-3 ps-3 d-flex justify-content-start">
                <dl>
                    <dt>
                        Re-Inspected Acceptable?
                        @*@Html.DisplayNameFor(model => model.NCRClosed) *@
                    </dt>
                    <dd class="mt-2">
                        <div class="d-flex justify-content-center">
                            <span class="me-5">
                                <input type="radio" id="marked" name="item_marked" disabled value="yes">
                                <label for="marked">Yes</label><br>
                                @* @Html.DisplayFor(model => model.NCRClosed) *@
                            </span>
                            <span>
                                <input type="radio" id="notMarked" name="item_marked" disabled value="no">
                                <label for="notMarked">No</label><br>
                            </span>
                        </div>
                    </dd>
                </dl>
            </div>
            <div class="col-sm-3 pt-2">
                <small class="fw-light">
                    If "No" then record new NCR number
                </small>
                <div class="row">
                    <dl>
                        <dt class="mt-2 col-sm fw-normal">
                            New NCR Number:
                        </dt>
                    </dl>
                </div>
            </div>
            <div class="col-sm-6 border pt-3 ps-3">
                <div class="row">
                    <dl class="d-flex m-0">
                        <dt class="col-sm">
                            Inspector's Name
                            @* @Html.DisplayNameFor(model => model.InspectName) *@
                        </dt>
                        <dd class="col-sm ms-2">
                            @(Model.QualityInspection?.Name ?? "John Smith")
                        </dd>
                    </dl>                                          @*  FIX THIS PART AND FIGURE OUT HOW TO GET QUALITYT REP NAME *@
                </div>
                <div class="row">
                    <dl class="d-flex">
                        <dt class="col-sm">
                            Date
                            @* @Html.DisplayNameFor(model => model.InspectDate) *@
                        </dt>
                        <dd class="col-sm ms-2">
                            @Html.DisplayFor(model => model.NCR_Date) 
                        </dd>
                    </dl>
                </div>
            </div>
        </div>

        @* row 14 *@
        <div class="row m-1 border">
            <div class="col-sm-6 pt-3 ps-3 d-flex justify-content-start">
                <dl>
                    <dt>
                        NCR Closed
                    </dt>
                    <dd class="mt-2">
                        <div class="d-flex justify-content-center">
                            <span class="me-5">
                                <input type="radio" id="marked" name="item_marked" disabled  value="yes">
                                <label for="marked">Yes</label><br>
                                @* @Html.DisplayFor(model => model.NCRClosed) *@
                            </span>
                            <span>
                                <input type="radio" id="notMarked" name="item_marked" disabled  value="no">
                                <label for="notMarked">No</label><br>
                            </span>
                        </div>
                    </dd>
                </dl>
            </div>
            <div class="col-sm-6 border pt-3 ps-3">
                <div class="row">
                    <dl class="d-flex m-0">
                        <dt class="col-sm">
                            Quality Department
                        </dt>
                        <dd class="col-sm ms-2">
                            @Html.DisplayFor(model => model.QualityInspection.QualityIdentify)        @* FIX THIS PART AS WELL! *@
                        </dd>
                    </dl>
                </div>
                <div class="row">
                    <dl class="d-flex">
                        <dt class="col-sm">
                            Date
                            @* @Html.DisplayNameFor(model => model.InspectDate) *@
                        </dt>
                        <dd class="col-sm ms-2">
                            @Html.DisplayFor(model => model.QualityInspection.Date)    @* FIX THIS PART AS WELL! *@
                        </dd>
                    </dl>
                </div>
            </div>
        </div>

    </div>
</form>

<div class="d-flex justify-content-between">
    <div class="mt-2">
        <a asp-controller="Home" asp-action="List" class="btn btn-primary">Back to NCR Log</a>
    </div>
    <div class="mt-2">
        <a asp-action="Edit" asp-route-id="@Model?.ID" class="btn btn-outline-primary">Edit</a>
    </div>
</div>
