        Made this file for any code that we ended up deserting and or might need to reference/ implement later.

--------------------------------------------------------------------------------------
                Display a list of problems in the table (table data)               
<td>
    @foreach (var defectList in item.Product.DefectLists)
    {
        @defectList.Defect.Name;
    }
</td>   

                Only works if you use .Include() in the controller where you are retrieving the data
.Include(p=>p.Product)
.ThenInclude(d=>d.DefectLists)
.ThenInclude(d=>d.Defect)
--------------------------------------------------------------------------------------

@*             <div class="form-group">
                <label asp-for="PartID" class="control-label">Part ID</label>
                <input asp-for="PartID" class="form-control" />
            </div>
            <div class="form-group">
                <label asp-for="OperationID" class="control-label">Operation ID</label>
                <input asp-for="OperationID" class="form-control" />
            </div>
            <div class="form-group">
                <label asp-for="EngineeringID" class="control-label">Engineering ID</label>
                <input asp-for="EngineeringID" class="form-control" />
            </div> *@

            Inside the CREATE for the IDs.


CREATE METHOD BACK UP

        // POST: NCRs/Create
        // To protect from overposting attacks, enable the specific properties you want to bind to.
        // For more details, see http://go.microsoft.com/fwlink/?LinkId=317598.
        [HttpPost]
        [ValidateAntiForgeryToken]
        public async Task<IActionResult> Create([Bind("ID,NCR_Number,NCR_Date,NCR_Status,NCR_Stage,PartID,OperationID,EngineeringID")]
                NCR nCR, List<IFormFile> files)
        {
            if (ModelState.IsValid)
            {

                _context.Add(nCR);
                await _context.SaveChangesAsync();

                if (files != null && files.Count > 0)
                {
                    await OnPostUploadAsync(files, nCR.ID);
                }
                return RedirectToAction("List", "Home");

                //return RedirectToAction(nameof(Index));
            }
            ViewData["EngineeringID"] = new SelectList(_context.Engineerings, "ID", "ID", nCR.EngineeringID);
            ViewData["OperationID"] = new SelectList(_context.Operations, "ID", "ID", nCR.OperationID);
            ViewData["PartID"] = new SelectList(_context.Parts, "ID", "ID", nCR.PartID);
            return View(nCR);
        }
